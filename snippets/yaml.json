{
    "AWS CloudFormation Template": {
        "prefix": "AWSTemplate",
        "body": [
            "---",
            "AWSTemplateFormatVersion: '2010-09-09'",
            "Description: 'Master stack: ${1:PathToMasterStackFile}'",
            "",
            "Parameters:",
            "  BranchName:",
            "    Default: ${2:BranchName}",
            "    Description: Choose which Branch do you want to use",
            "    Type: String",
            "  Customer:",
            "    Description: is used as Customer tag value for all resources",
            "    Type: String",
            "    Default: ${3:Customer}",
            "    AllowedPattern: ^[A-Za-z0-9]*$",
            "    ConstraintDescription: must contain only alphanumeric characters and numbers.",
            "    MaxLength: 20",
            "    MinLength: 1",
            "  CustomerProject:",
            "    Description: is used as Customer project tag value for all resources",
            "    Type: String",
            "    Default: ${4:CustomerProject}",
            "    AllowedPattern: ^[A-Za-z0-9]*$",
            "    ConstraintDescription: must contain only alphanumeric characters and numbers.",
            "    MaxLength: 20",
            "    MinLength: 1",
            "  Environment:",
            "    Description: Environment to deploy. Use staging for limited resources and no alerts.",
            "    Type: String",
            "    Default: ${5|Staging,Production|}",
            "    AllowedValues:",
            "    - Staging",
            "    - Production",
            "",
            "Metadata:",
            "  AWS::CloudFormation::Interface:",
            "    ParameterGroups:",
            "    - Label:",
            "        default: Tagging and billing",
            "      Parameters:",
            "      - Customer",
            "      - CustomerProject",
            "    - Label:",
            "        default: Choose Branch and Environment",
            "      Parameters:",
            "      - Environment",
            "      - BranchName",
            "",
            "Mappings:",
            "  CFNBucket:",
            "    AllRegions:",
            "      BucketUrl: https://clouds-configuration.s3.amazonaws.com/clouds/cfn",
            "",
            "Resources:",
            "  $0",
            "",
            "Outputs:"
        ],
        "description": "This snippet provides a complete AWS template structure."
    },
    "MetadataParameterGroup": {
        "prefix": "ParameterGroup",
        "body": [
            "- Label:",
            "    default: ${1:ParameterGroupDescription}",
            "  Parameters:",
            "  - ${0:Parameter}"
        ],
        "description": "Adds ParameterGroup to Interface"
    },
    "Resource": {
        "prefix": "NewResource",
        "body": [
            "${1:ResourceName}:",
            "  Type: AWS::${2:ResourceGroup}::${3:ResourceType}",
            "  DependsOn:",
            "  - ${4:ResourceDependsOn}",
            "  Properties:",
            "    ${5:ResourceProperties}"
        ],
        "description": "Adds new AWS resource to template"
    },
    "ResourceWithTemplate": {
        "prefix": "NewResourceWithTemplateURL",
        "body": [
            "${1:ResourceName}:",
            "Type: AWS::CloudFormation::Stack",
            "DependsOn:",
            "- ${2:ResourceDependsOn}",
            "Properties:",
            "  Parameters:",
            "    ${3:ResourceParameters}",
            "  TemplateURL:",
            "    !Join",
            "    - '/'",
            "    - - !FindInMap [CFNBucket, AllRegions, BucketUrl]",
            "      - !Ref BranchName",
            "      - cfn-generic/${0:ResourceTemplateURL}"
        ],
        "description": "Adds new AWS resource from generic template to current template"
    },
    "Parameter": {
        "prefix": "Parameter",
        "body": [
            "${1:ParameterName}:",
            "  Description: ${2:ParameterDescription}",
            "  Type: ${3|String,Number,CommaDelimitedList|}",
            "  Default: ${4:ParameterDefault}"
        ],
        "description": "Adds new parameter"
    },
    "FindInMap": {
        "prefix": "!FindInMap",
        "body": "!FindInMap [${1:Map}, ${2:Selector}, ${3:Value}]",
        "description": "Add !FindInMapp function"
    },
    "GetAtt": {
        "prefix": "!GetAtt",
        "body": "!GetAtt $0",
        "description": "Add !GetAtt function"
    },
    "ImportValue": {
        "prefix": "!ImportValue",
        "body": "!ImportValue ${1:ValueToImport}",
        "description": "Add !ImportValue function"
    },
    "Join": {
        "prefix": "!Join",
        "body": [
            "!Join",
            "- '${1:Delimiter}'",
            "- - ${2: Value}",
            "  - ${0: Value}"
        ],
        "description": "Add !Join function"
    },
    "Reference": {
        "prefix": "!Ref",
        "body": "!Ref ${0}",
        "description": "Add !Ref function"
    },
    "Sub": {
        "prefix": "!Sub",
        "body": [
            "!Sub:",
            "- ${1:StringWithVariables}",
            "- { ${2:VarName}: ${3:VarValue}$0 }"
        ],
        "description": "Adds !Sub function"
    },
    "Tag": {
        "prefix": "Tag",
        "body": [
            "- Key: ${1:KeyName}",
            "  Value: ${2:KeyValue}"
        ],
        "description": "Adds Tag"
    },
    "Output": {
        "prefix": "Output",
        "body": [
            "${1:OutputName}:",
            "  Description: ${2:OutputDescription}",
            "  Value: ${0:OutputValue}"
        ],
        "description": "Adds output"
    },
    "Export": {
        "prefix": "Export",
        "body": [
            "${1:OutputName}:",
            "  Description: ${2:OutputDescription}",
            "  Value: ${3:OutputValue}",
            "  Export:",
            "    Name: ${0:OutputExportName}"
        ],
        "description": "Adds export"
    }
}
